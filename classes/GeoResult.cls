public class GeoResult {
    
    //Generated by JSON2Apex http://json2apex.herokuapp.com/
    
    public class Address_components {
        public String long_name;
        public String short_name;
        public List<String> types;
    }

    public class Northeast {
        public Double lat;
        public Double lng;
    }

    public List<Results> results;
    public String status;

    public class Bounds {
        public Northeast northeast;
        public Northeast southwest;
    }

    public class Geometry {
        public Bounds bounds;
        public Northeast location;
        public String location_type;
        public Bounds viewport;
    }

    public class Results {
        public List<Address_components> address_components;
        public String formatted_address;
        public Geometry geometry;
        public List<String> types;
    }

    
    public static GeoResult parse(String json) {
        //return (GeoResult) System.JSON.deserialize(json, GeoResult.class);
        try 
        {
            return (GeoResult) System.JSON.deserialize(json, GeoResult.class);
        } 
        catch (Exception ex)
        {
            system.debug('@@@@@GeoResult; Bad JSON ' + json);
            return new GeoResult();
        }
    }
    
    public String getCity(List<Address_components> addresscomponents) {
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'administrative_area_level_2')
                    return c.long_name;
                        
            return null;
            
    }

//UK street_number, route, postal_town, postal_code, 
    
    
    public String getState(List<Address_components> addresscomponents) {

            //"long_name" : "Connecticut",
            //"short_name" : "CT",
        //administrative_area_level_1 indicates a first-order civil entity below the country level. Within the United States, 
        //these administrative levels are states. Not all nations exhibit these administrative levels.
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'administrative_area_level_1')
                    return c.short_name;
                        
            return null;
            
    }

    public String getState1(List<Address_components> addresscomponents) {

            //"long_name" : "Connecticut",
            //"short_name" : "CT",
        //administrative_area_level_1 indicates a first-order civil entity below the country level. Within the United States, 
        //these administrative levels are states. Not all nations exhibit these administrative levels.
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'administrative_area_level_1')
                    return c.short_name;
                        
            return null;
            
    }
    
    public String getState2(List<Address_components> addresscomponents) {

        //administrative_area_level_2 indicates a second-order civil entity below the country level. Within the United States, 
        //these administrative levels are counties. Not all nations exhibit these administrative levels.
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'administrative_area_level_2')
                    return c.short_name;
                        
            return null;
            
    }
    public String getCounty(List<Address_components> addresscomponents) {

        String county;        
        String subCounty;        
        for (Address_components c : addresscomponents){
            for (String t : c.types){
                if(t == 'locality'){
                    county = c.long_name;
                }
                if(t == 'sublocality'){
                    subCounty = c.long_name;
                }
            }
        }
       
        if (county == null){
            return subCounty;
        }                 
        return county;
            
    }
            
    public String getState3(List<Address_components> addresscomponents) {

        //administrative_area_level_3 indicates a third-order civil entity below the country level. This type indicates a minor 
        //civil division. Not all nations exhibit these administrative levels.
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'administrative_area_level_3')
                    return c.short_name;
                        
            return null;
            
    }
    
    public String getState4(List<Address_components> addresscomponents) {

        //administrative_area_level_3 indicates a third-order civil entity below the country level. This type indicates a minor 
        //civil division. Not all nations exhibit these administrative levels.
        
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'postal_town')
                    return c.short_name;
                        
            return null;
            
    }   
    
    public String getPostal(List<Address_components> addresscomponents) {
            
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'postal_code')
                    return c.long_name;
                        
            return null;
            
    }   

    public String getCountry(List<Address_components> addresscomponents) {

            //"long_name" : "United States",
            //"short_name" : "US",
            
        for (Address_components c : addresscomponents)
            for (String t : c.types)
                if(t == 'country')
                    return c.long_name;
                        
            return null;
            
    }   

    public decimal getLatitude(Geometry geometry) {

            if (Geometry.location.lat != null)
                return (decimal)Geometry.location.lat;
                
            return 0;
            
    }

    public decimal getLongitude(Geometry geometry) {

            if (Geometry.location.lng != null)
                return (decimal)Geometry.location.lng;
                
            return 0;
            
    }
        
 /* Example of how to use
  
            //GeoResult geo = new GeoResult();
            //geo = GeoResult.parse(res.getBody()); 
            
           //if (geo.results[0] != null) {
           //   if (geo.results[0].address_components[0] != null) {
           //       system.debug('===>CITY:' +geo.getCity(geo.results[0].address_components));
           //       system.debug('===>STATE:' +geo.getState(geo.results[0].address_components));
           //       system.debug('===>POSTAL:' +geo.getPostal(geo.results[0].address_components));
           //       system.debug('===>COUNTRY:'  +geo.getCountry(geo.results[0].address_components));
           //   }
           //}
           
          //system.debug('===>GEOMETRY:LOCATION LAT' +geo.results[0].Geometry.location.lat);
          //system.debug('===>GEOMETRY:LOCATION LON' +geo.results[0].Geometry.location.lng);
           
            //for (GeoResult.results r : geo.results)
            //  system.debug('===>' + r.formatted_address);
                
            //GeoResult.Address_components ac = geo.results[0].address_components[0];
            //for (String s : ac.types)
            //  system.debug('===>' +s);
                
            //for (GeoResult.Address_components ac : geo.results[0].Address_components) 
            //  system.debug('===>' +ac);
            
            //for (GeoResult.Address_components ac : geo.results[0].Address_components) 
            //  for (String t : ac.types)
            //      if(t == 'administrative_area_level_2')
            //          system.debug('===>CITY:' +ac.long_name);
            
             
 */ 
    /*
    static testMethod void testParse() {
        String json = '{'+
        '   \"results\" : ['+
        '      {'+
        '         \"address_components\" : ['+
        '            {'+
        '               \"long_name\" : \"00187\",'+
        '               \"short_name\" : \"00187\",'+
        '               \"types\" : [ \"postal_code\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Rome\",'+
        '               \"short_name\" : \"Rome\",'+
        '               \"types\" : [ \"locality\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Rome\",'+
        '               \"short_name\" : \"RM\",'+
        '               \"types\" : [ \"administrative_area_level_2\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Lazio\",'+
        '               \"short_name\" : \"Lazio\",'+
        '               \"types\" : [ \"administrative_area_level_1\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Italy\",'+
        '               \"short_name\" : \"IT\",'+
        '               \"types\" : [ \"country\", \"political\" ]'+
        '            }'+
        '         ],'+
        '         \"formatted_address\" : \"00187 Rome, Italy\",'+
        '         \"geometry\" : {'+
        '            \"bounds\" : {'+
        '               \"northeast\" : {'+
        '                  \"lat\" : 41.912979,'+
        '                  \"lng\" : 12.5015479'+
        '               },'+
        '               \"southwest\" : {'+
        '                  \"lat\" : 41.8945799,'+
        '                  \"lng\" : 12.47453'+
        '               }'+
        '            },'+
        '            \"location\" : {'+
        '               \"lat\" : 41.905116,'+
        '               \"lng\" : 12.4867883'+
        '            },'+
        '            \"location_type\" : \"APPROXIMATE\",'+
        '            \"viewport\" : {'+
        '               \"northeast\" : {'+
        '                  \"lat\" : 41.912979,'+
        '                  \"lng\" : 12.5015479'+
        '               },'+
        '               \"southwest\" : {'+
        '                  \"lat\" : 41.8945799,'+
        '                  \"lng\" : 12.47453'+
        '               }'+
        '            }'+
        '         },'+
        '         \"types\" : [ \"postal_code\" ]'+
        '      },'+
        '      {'+
        '         \"address_components\" : ['+
        '            {'+
        '               \"long_name\" : \"00187\",'+
        '               \"short_name\" : \"00187\",'+
        '               \"types\" : [ \"postal_code\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Palanga\",'+
        '               \"short_name\" : \"Palanga\",'+
        '               \"types\" : [ \"locality\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Palangos miesto savivaldybė\",'+
        '               \"short_name\" : \"Palangos m. sav.\",'+
        '               \"types\" : [ \"administrative_area_level_2\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Klaipėda County\",'+
        '               \"short_name\" : \"Klaipėda County\",'+
        '               \"types\" : [ \"administrative_area_level_1\", \"political\" ]'+
        '            },'+
        '            {'+
        '               \"long_name\" : \"Lithuania\",'+
        '               \"short_name\" : \"LT\",'+
        '               \"types\" : [ \"country\", \"political\" ]'+
        '            }'+
        '         ],'+
        '         \"formatted_address\" : \"Palanga 00187, Lithuania\",'+
        '         \"geometry\" : {'+
        '            \"bounds\" : {'+
        '               \"northeast\" : {'+
        '                  \"lat\" : 55.957075,'+
        '                  \"lng\" : 21.0768019'+
        '               },'+
        '               \"southwest\" : {'+
        '                  \"lat\" : 55.955257,'+
        '                  \"lng\" : 21.0719858'+
        '               }'+
        '            },'+
        '            \"location\" : {'+
        '               \"lat\" : 55.9560379,'+
        '               \"lng\" : 21.0739764'+
        '            },'+
        '            \"location_type\" : \"APPROXIMATE\",'+
        '            \"viewport\" : {'+
        '               \"northeast\" : {'+
        '                  \"lat\" : 55.9575149802915,'+
        '                  \"lng\" : 21.0768019'+
        '               },'+
        '               \"southwest\" : {'+
        '                  \"lat\" : 55.9548170197085,'+
        '                  \"lng\" : 21.0719858'+
        '               }'+
        '            }'+
        '         },'+
        '         \"types\" : [ \"postal_code\" ]'+
        '      }'+
        '   ],'+
        '   \"status\" : \"OK\"'+
        '}';
        GeoResult obj = parse(json);
        System.assert(obj != null);
    }
    */
}